var documenterSearchIndex = {"docs":
[{"location":"forward_modelling/#Forward-Modelling","page":"Forward Modelling","title":"Forward Modelling","text":"","category":"section"},{"location":"forward_modelling/","page":"Forward Modelling","title":"Forward Modelling","text":"SNMRForward defines functions and objects to be used for forward modelling of surface NMR free-induction decay (FID) experiments.","category":"page"},{"location":"forward_modelling/","page":"Forward Modelling","title":"Forward Modelling","text":"ConductivityModel\n\nMRSForward\n\nMRSForward(::Real, ::AbstractVector{<:Real},\n    ::AbstractVector{<:Real}, ::Real, ::Real,\n    ::ConductivityModel)\n\nMRSForward_square\n\nforward","category":"page"},{"location":"forward_modelling/#SNMRForward.ConductivityModel","page":"Forward Modelling","title":"SNMRForward.ConductivityModel","text":"A data type for a layered-earth conductivity model.\n\nMembers:\n\nσ::Vector{<:Real}: conductivity of each layer\nd::Vector{<:Real}: thickness (not depth) of each layer. Length must be one less than length of σ, as the bottom layer is an infinite half-space.\n\n\n\n\n\n","category":"type"},{"location":"forward_modelling/#SNMRForward.MRSForward","page":"Forward Modelling","title":"SNMRForward.MRSForward","text":"Data type for forward modelling 1D magnetic resonance sounding (MRS) experiments.\n\nMembers: -kernel::Matrix{<:Number}: pre-computed linear kernel matrix for the forward problem. May be complex. -qgrid::AbstractVector{<:Real}: pulse moments used in the experiment. -zgrid::AbstractVector{<:Real}: depth grid for forward modelling (as cell boundaries). -dz::AbstractVector{<:Real}: cell thickness of the depth grid.\n\n\n\n\n\n","category":"type"},{"location":"forward_modelling/#SNMRForward.MRSForward-Tuple{Real, AbstractVector{<:Real}, AbstractVector{<:Real}, Real, Real, ConductivityModel}","page":"Forward Modelling","title":"SNMRForward.MRSForward","text":"MRSForward(R::Real, zgrid::AbstractVector{<:Real},\nqgrid::AbstractVector{<:Real}, ϕ::Real, Be::Real,\ncondLEM::ConductivityModel; nrvals = 200, temp=300.0,\nqwe=true)\n\nReturns an MRSForward forward modelling object, with the kernel computed for a circular loop.\n\nParameters:\n\nR: loop radius in metres\nzgrid: depth cell boundaries, in metres below surface.\nqgrid: pulse moments used for the experiment, in Ampere-seconds.\nϕ: magnetic field inclination in radians.\nBe: Earth field magnitude in Tesla.\ncondLEM: layered-earth conductivity model, as a ConductivityModel object.\n\nOptional parameters:\n\nnrvals: number of radial points to use to evaluate the horizontal integration of the kernel.\ntemp: temperature in Kelvin, affects the magnitude of equilibrium magnetisation.\nqwe: whether to use quadrature with extrapolation (QWE) to evaluate Hankel transforms for the kernel. \n\nThis is slower, but more accurate at shallower depths, than the alternative 801-point digital filter.\n\n\n\n\n\n","category":"method"},{"location":"forward_modelling/#SNMRForward.MRSForward_square","page":"Forward Modelling","title":"SNMRForward.MRSForward_square","text":"MRSForward_square(L::Real, zgrid::AbstractVector{<:Real},\nqgrid::AbstractVector{<:Real}, ϕ::Real, θ::Real, Be::Real,\ncondLEM::ConductivityModel; nxpoints = 128, temp=300.0)\n\nReturns an MRSForward forward modelling object, with the kernel computed for a square loop.\n\nParameters:\n\nL: loop radius in metres\nzgrid: depth cell boundaries, in metres below surface.\nqgrid: pulse moments used for the experiment, in Ampere-seconds.\nϕ: magnetic field inclination in radians.\nθ: horizontal angle between loop orientation and magnetic north, in radians.\nBe: Earth field magnitude in Tesla.\ncondLEM: layered-earth conductivity model, as a ConductivityModel object.\n\nOptional parameters:\n\nnxpoints: number of points to use in each dimension for the horizontal integration of the kernel.\ntemp: temperature in Kelvin, affects the magnitude of equilibrium magnetisation.\n\n\n\n\n\n","category":"function"},{"location":"forward_modelling/#SNMRForward.forward","page":"Forward Modelling","title":"SNMRForward.forward","text":"forward(F::MRSForward, m::Vector{<:Real})\n\nComputes the complex response amplitude of a water content model for a given FID experiment setup, described by an MRSForward object. Returns response as a complex vector, in units of volts, one  element per pulse moment.\n\nParameters:\n\nF: an MRSForward object containing the kernel for modelling\nm: a vector containing water saturation at each depth in F.zgrid.\n\n\n\n\n\n","category":"function"},{"location":"constants/#Constants-and-convenience-functions","page":"Constants and convenience functions","title":"Constants and convenience functions","text":"","category":"section"},{"location":"constants/","page":"Constants and convenience functions","title":"Constants and convenience functions","text":"SNMRForward exports values of a number of useful physical constants related to the physics of the SNMR technique.","category":"page"},{"location":"constants/","page":"Constants and convenience functions","title":"Constants and convenience functions","text":"μ0\nγh\nħ\nkb\nnh2o\nmag_factor","category":"page"},{"location":"constants/#SNMRForward.μ0","page":"Constants and convenience functions","title":"SNMRForward.μ0","text":"magnetic vacuum permeability (Newton/(Ampere^2))\n\n\n\n\n\n","category":"constant"},{"location":"constants/#SNMRForward.γh","page":"Constants and convenience functions","title":"SNMRForward.γh","text":"gyromagnetic ratio of the hydrogen nucleus (bound in water) (radians/(second Tesla))\n\n\n\n\n\n","category":"constant"},{"location":"constants/#SNMRForward.ħ","page":"Constants and convenience functions","title":"SNMRForward.ħ","text":"reduced Planck's constant (Joule second)\n\n\n\n\n\n","category":"constant"},{"location":"constants/#SNMRForward.kb","page":"Constants and convenience functions","title":"SNMRForward.kb","text":"boltzmann constant (Joule/Kelvin)\n\n\n\n\n\n","category":"constant"},{"location":"constants/#SNMRForward.nh2o","page":"Constants and convenience functions","title":"SNMRForward.nh2o","text":"number density of water (m^(-3))\n\n\n\n\n\n","category":"constant"},{"location":"constants/#SNMRForward.mag_factor","page":"Constants and convenience functions","title":"SNMRForward.mag_factor","text":"m0 = mag_factor(temp)\n\nReturns the ratio between the magnetisation of completely saturated water (100% water content) and the ambient magnetic field at thermal equilibrium.\n\nParameters:\n\ntemp: temperature in Kelvin.\n\nReturns:\n\nm0: magnetisation ratio, in Amperes per (metre Tesla).\n\n\n\n\n\n","category":"function"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"EditURL = \"https://github.com/richardt94/SNMRForward.jl/blob/master/scripts/forward_model.jl\"","category":"page"},{"location":"generated/forward_model/#Forward-modelling-with-a-circular-surface-loop","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"","category":"section"},{"location":"generated/forward_model/#Introduction","page":"Forward modelling with a circular surface loop","title":"Introduction","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"This example shows the \"under the hood\" workings of the SNMRForward code, through demonstrating the modelling of a 1D magnetic resonance sounding experiment with a single, circular surface loop.","category":"page"},{"location":"generated/forward_model/#Setup","page":"Forward modelling with a circular surface loop","title":"Setup","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Use the SNMRForward package and PyPlot for plotting","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"using SNMRForward, PyPlot","category":"page"},{"location":"generated/forward_model/#Physical-parameters","page":"Forward modelling with a circular surface loop","title":"Physical parameters","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Set dimensions for radius and the modelling discretisation grid","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"R = 50\nrgrid = R * (0.01:0.01:2.5)\nzgrid = R * (0.01:0.01:2)","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"0.5:0.5:100.0","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Conductive half-space, 0.001 S/m at 2.5 kHz Larmor frequency. γh is the gyromagnetic ratio of hydrogen bound in water molecules and allows conversion between Larmor frequency and magnetic field intensity.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\nωl = 2*π*2.5e3 #Hz, typical for Earth's field strength\nBe = ωl/SNMRForward.γh\nd = Vector{Float64}()#[20.0,30.0]\nσ = [0.001]#,0.1, 0.02]","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"1-element Vector{Float64}:\n 0.001","category":"page"},{"location":"generated/forward_model/#Excitation-field","page":"Forward modelling with a circular surface loop","title":"Excitation field","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"This cell calculates the subsurface field produced by the surface coil. This function calculates this by inversion from the Hankel domain using \"quadrature with extrapolation\" (see Kerry Key, Geophysics 77(3), F21-F30 (2012)), which is more numerically stable for evaluation of the field in the near surface, where the Hankel transform integral is oscillatory and converges slowly.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Hz,Hr) = SNMRForward.magfields_qwe(R,ωl,σ,d,rgrid,zgrid)\n\n# plot the real part of the fields\nfig, ax = subplots(1,2)\nsca(ax[1])\npcolor(rgrid, zgrid, real.(Hz)', vmin = -0.01, vmax=0.01)\ngca().invert_yaxis()\nsca(ax[2])\npcolor(rgrid, zgrid, real.(Hr)', vmin = -0.01, vmax=0.01)\ngca().invert_yaxis()\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Decompose the excitation field into components that rotate with and against the precession of nuclear spin, assuming a geomagnetic field inclination of 65° (or 13π/36 radians). There is also a phase lag ζ which depends on the subsurface conductivity. Then make a plot of these field components.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\nϕ = 13*π/36\nHfield_params = SNMRForward.co_counter_field.(Hz, Hr, ϕ, -π/2)\n\nHco = first.(Hfield_params)\nζ = last.(Hfield_params)\n\n\nH_counter = reshape([a[2] for a in Hfield_params[:]], size(Hco)...)\n\n#\nfig, ax = subplots(1,2,figsize=(10,8))\nsca(ax[1])\nylabel(\"z (m)\")\nxlabel(\"r (m)\")\ntitle(\"co-rotating field\")\ncontourf(rgrid, zgrid, log.(Hco)', [-12,-7,-6.5,-6.0,-5.5,-5.0,-4.0,-3.0,-1.0])\ngca().invert_yaxis()\nsca(ax[2])\ntitle(\"counter-rotating field\")\nxlabel(\"r (m)\")\ncs = contourf(rgrid, zgrid, log.(H_counter)', [-12,-7,-6.5,-6.0,-5.5,-5.0,-4.0,-3.0,-1.0])\ngca().invert_yaxis()\n\ncolorbar(cs,location=\"bottom\", ax=ax, label = \"log H\")\n\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Show the phase lag as a contour plot","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\n\nfigure()\ncs = contourf(rgrid, zgrid, ζ')\ngca().invert_yaxis()\ncolorbar(cs)\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Plot up the co- and counter-rotating B fields with actual value of excitation current (300 A). B-field is shown in Gauss.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"# H -> B in tesla or gauss\n# for a 300 A current, normalised to match figure 1 of weichman\nμ_G = 4*π * 1e-3\nnorm_factor = 300 * μ_G / 0.299895\nfig, ax = subplots(1,2,figsize=(10,8))\nsca(ax[1])\nylabel(\"z (m)\")\nxlabel(\"r (m)\")\ntitle(\"co-rotating field\")\ncontourf(rgrid, zgrid, log.(norm_factor * Hco)', [-11,-6,-5.5,-5.0,-4.5,-4.0,-3.0,-2.0,-0.0], cmap=\"jet\")\ngca().invert_yaxis()\nsca(ax[2])\ntitle(\"counter-rotating field\")\nxlabel(\"r (m)\")\ncs = contourf(rgrid, zgrid, log.(norm_factor * H_counter)', [-11,-6,-5.5,-5.0,-4.5,-4.0,-3.0,-2.0,-0.0], cmap=\"jet\")\ngca().invert_yaxis()\n\ncolorbar(cs,location=\"bottom\", ax=ax, label = \"log B\")\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/#Modelling-kernel","page":"Forward modelling with a circular surface loop","title":"Modelling kernel","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"We can also compute the sensitivity of the MRS experiment to water in different locations relative to the loop (the kernel), which is done for a number of pulse moments to produce the forward model.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\nμ = SNMRForward.μ0\nkernel = SNMRForward.point_kernel.(10, μ * Hco, μ * H_counter, ζ, ωl)\n\nkernel *= SNMRForward.mag_factor(300.0) * ωl/SNMRForward.γh\n\n#\nfigure()\ncs = contourf(rgrid, zgrid, real.(kernel)'/3.89619e-10, levels = [-0.1,-0.05,-0.02,-0.01,0.01,0.02,0.05,0.1],cmap = \"gist_stern\")\ngca().invert_yaxis()\ncolorbar(cs)\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Integrating the kernel horizontally produces a 1D kernel, showing sensitivity to laterally contiguous water layers at each depth in the modelling grid.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\nn_theta_points = 100\nthetagrid = range(0, 2*pi, length=n_theta_points)\n\n#radial integral scale\ndr = (rgrid[2] - rgrid[1]) * rgrid\n#azimuthal integral scale\ndtheta = thetagrid[2] - thetagrid[1]\n\nk1d = zeros(ComplexF64, size(zgrid)...)\n\nq = 10\nfor (i_th, θ) = enumerate(thetagrid)\n    Hparams = SNMRForward.co_counter_field.(Hz, Hr, ϕ, θ)\n\n    Hco = first.(Hparams)\n    ζ = last.(Hparams)\n    Hctr = reshape([a[2] for a in Hparams[:]], size(Hco)...)\n\n    kernel = SNMRForward.point_kernel.(q, μ * Hco, μ * Hctr, ζ, ωl)\n    global k1d += dtheta*transpose(kernel)*dr\nend\n\n#\n\nBe = ωl/SNMRForward.γh\nm0 = SNMRForward.mag_factor(300) * Be\n\n\n#\nfull_kernel = k1d * m0 # in V/m\nfigure()\nplot(real.(full_kernel * 10^9), zgrid)\ngca().set_yscale(\"log\")\ngca().invert_yaxis()\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/#Tipping-angle","page":"Forward modelling with a circular surface loop","title":"Tipping angle","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"The \"tipping angle\" is the amount by which the exciting field rotates the magnetisation of subsurface water away from the geomagnetic field. At shallow depths where the excitation field is strong, the magnetisation may be rotated through one or more full revolutions, although this will not increase the signal from the free induction decay because the maximum signal is produced at a tipping angle of π/2 (perpendicular to the geomagnetic field).","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\nθ = -π/2\nHp1 = SNMRForward.co_counter_field.(Hz, Hr, ϕ, θ)\nHp2 = SNMRForward.co_counter_field.(Hz, Hr, ϕ, θ + π)\n\nHparams = vcat(Hp1[end:-1:1, :], Hp2)\n\nHco = first.(Hparams)\nζ = last.(Hparams)\nHctr = reshape([a[2] for a in Hparams[:]], size(Hco)...)\n\nq = 10\nαt = ((SNMRForward.γh * q * μ * Hco) .% (2*π))/π * 180\n\nxs = vcat(-reverse(rgrid), rgrid)\n\nfigure(figsize=(10,5))\ncs = contourf(xs, zgrid, αt', levels=[0,45,90,135,210,225,270,315,360])\ngca().invert_yaxis()\nxlabel(\"distance from loop centre (m)\")\nylabel(\"depth (m)\")\ncolorbar(cs, label = \"excitation angle (degrees)\")\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/#D-kernel-for-different-pulse-moments","page":"Forward modelling with a circular surface loop","title":"1D kernel for different pulse moments","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"We can write a function to compute the 1D kernel for a given pulse moment, and explore how pulse moments change the depth sensitivity of the MRS experiment.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"#\nfunction kernel_1d(q, ϕ, ωl, Hz, Hr)\n    n_theta_points = 100\n    thetagrid = range(0, 2*pi, length=n_theta_points)\n\n    #radial integral scale\n    dr = (rgrid[2] - rgrid[1]) * rgrid\n    #azimuthal integral scale\n    dtheta = thetagrid[2] - thetagrid[1]\n\n    k1d = zeros(ComplexF64, size(Hz,2))\n\n    for (i_th, θ) = enumerate(thetagrid)\n        Hparams = SNMRForward.co_counter_field.(Hz, Hr, ϕ, θ)\n\n        Hco = first.(Hparams)\n        ζ = last.(Hparams)\n        Hctr = reshape([a[2] for a in Hparams[:]], size(Hco)...)\n\n        kernel = SNMRForward.point_kernel.(q, μ * Hco, μ * Hctr, ζ, ωl)\n        k1d += dtheta*transpose(kernel)*dr\n    end\n    k1d\nend\n\n# contour plot of 1D kernel (cf. fig. 5.6, Hertrich)\nqgrid = [0.1,0.25,0.5,0.75,1,2,3,4,5,6,7,8,9,10,11] .* 2\nϕ = 12*π/36\n\nkq = reduce(hcat, kernel_1d(q, ϕ, ωl, Hz, Hr) for q in qgrid)\n\n#\nfig, ax = subplots(1,1,figsize=(5,10))\ncontourf(qgrid, zgrid, 10^9 * real.(kq*m0), cmap=\"RdBu_r\", levels=[-150,-100,-50,-25,0,25,50,100,150])\ngca().invert_yaxis()\nxlabel(\"q (A s)\")\nylabel(\"Depth (m)\")\ncolorbar(label = \"Real part of 1D kernel (nV/m)\")\ngcf()\n\n# \"log sensitivity\" (Fig. 5.5, Hertrich)\nfig, ax = subplots(1,1,figsize=(7,10))\ncontourf(qgrid, zgrid, log10.(10^9 * abs.(kq*m0)), levels=[-1,0.1,0.6,1.15,1.7,2.5], cmap=\"jet\")\ngca().invert_yaxis()\nxlabel(\"Pulse moment (A s)\")\nylabel(\"Depth (m)\")\ncolorbar(label = \"log(1D sensitivity (nV/m))\")\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/#Forward-modelling-of-the-sounding-curve","page":"Forward modelling with a circular surface loop","title":"Forward modelling of the sounding curve","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"The result of the forward modelling is a \"sounding curve\" - this corresponds to the initial amplitude of the free induction decay signal recorded by the receiver, for each pulse moment. We can examine the sounding curves for fully saturated water layers at different thicknesses and depths.","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"# do an actual forward model\ndz = zgrid[2] - zgrid[1]\nfwd_kernel = kq * m0\n# 10 - 20 m\nw = zeros(length(zgrid))\nw[(zgrid .>= 10) .& (zgrid .<= 20)] .= 1\n\nresponse = transpose(fwd_kernel) * w * dz\n\nfig, ax = subplots(1,3, figsize=(15,5))\nsca(ax[1])\nplot(qgrid, real.(response))\ntitle(\"Saturated layer 10 - 20 m\")\nylabel(\"Response voltage (V)\")\nxlabel(\"Pulse moment (A s)\")\n# 30 - 45 m\nw = zeros(length(zgrid))\nw[(zgrid .>= 30) .& (zgrid .<= 45)] .= 1\n\nresponse = transpose(fwd_kernel) * w * dz\n\nsca(ax[2])\nplot(qgrid, real.(response))\ntitle(\"Saturated layer 30 - 45 m\")\nxlabel(\"Pulse moment (A s)\")\n# 60 - 80 m\nw = zeros(length(zgrid))\nw[(zgrid .>= 60) .& (zgrid .<= 80)] .= 1\n\nresponse = transpose(fwd_kernel) * w * dz\n\nsca(ax[3])\nplot(qgrid, real.(response))\ntitle(\"Saturated layer 60 - 80 m\")\nxlabel(\"Pulse moment (A s)\")\ngcf()\n#","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/#Depth-slices-of-sensitivity","page":"Forward modelling with a circular surface loop","title":"Depth slices of sensitivity","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"We can explore the kernel a bit more by looking at depth slices, showing how sensitivity even at a constant depth can change with lateral position","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"# horizontal cross section of the kernel\nq = 10\nHz_cross = Hz[:,6]\nHr_cross = Hr[:,6]\nthetagrid = (0:1:360)./360 * 2 * π\n\nHfield_params = reduce(hcat, SNMRForward.co_counter_field.(Hz_cross, Hr_cross, 13*π/36, θ) for θ in thetagrid)\nHco = first.(Hfield_params)\nζ = last.(Hfield_params)\nH_counter = reshape([a[2] for a in Hfield_params[:]], size(Hco)...)\nkernel_cross = m0 * SNMRForward.point_kernel.(q, μ*Hco, μ*H_counter, ζ, ωl) * 10^9\n\nfig = figure()\nax = fig.add_subplot(projection=\"polar\")\nax.set_theta_zero_location(\"N\")\nax.set_rticks([25,50,75,100])\nax.set_yticklabels([\"25\",\"50\",\"75\",\"r = 100 m\"])\npcolormesh(thetagrid, rgrid, real.(kernel_cross)/0.059512, cmap=\"RdBu\", vmin=-1.0, vmax = 1.0)\ncolorbar(label=\"Normalised real kernel\")\ngcf()","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/#The-forward-modelling-API","page":"Forward modelling with a circular surface loop","title":"The forward modelling API","text":"","category":"section"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"Now let's actually use the defined forward modelling API, having shown what we're doing \"under the hood\".","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"# Actually use the defined structs in the package to do forward modelling\ncondLEM = SNMRForward.ConductivityModel(σ, d)\nqgrid = [0.1,0.25,0.5,0.75,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nϕ = 13*π/36\nF = SNMRForward.MRSForward(R, zgrid, qgrid, ϕ, Be, condLEM)\n#\nw = zeros(length(zgrid))\nw[(zgrid .>= 30) .& (zgrid .<= 45)] .= 1\ndata = SNMRForward.forward(F,w)\n\nfigure()\nplot(qgrid,real.(data))\ngcf()\n#\n\n\nw = zeros(length(zgrid))\nw[(zgrid .>= 10) .& (zgrid .<= 20)] .= 1\nresponse = SNMRForward.forward(F,w)\n\nfig, ax = subplots(1,3, figsize=(15,5))\nsca(ax[1])\nplot(qgrid, real.(response))\ntitle(\"Saturated layer 10 - 20 m\")\nylabel(\"Response voltage (V)\")\nxlabel(\"Pulse moment (A s)\")\ngca().ticklabel_format(axis=\"y\", style=\"sci\", scilimits=(0,0))\n# 30 - 45 m\nw = zeros(length(zgrid))\nw[(zgrid .>= 30) .& (zgrid .<= 45)] .= 1\n\nresponse = SNMRForward.forward(F,w)\n\nsca(ax[2])\nplot(qgrid, real.(response))\ntitle(\"Saturated layer 30 - 45 m\")\nxlabel(\"Pulse moment (A s)\")\ngca().ticklabel_format(axis=\"y\", style=\"sci\", scilimits=(0,0))\n# 60 - 80 m\nw = zeros(length(zgrid))\nw[(zgrid .>= 60) .& (zgrid .<= 80)] .= 1\n\nresponse = SNMRForward.forward(F,w)\n\nsca(ax[3])\nplot(qgrid, real.(response))\ntitle(\"Saturated layer 60 - 80 m\")\nxlabel(\"Pulse moment (A s)\")\ngca().ticklabel_format(axis=\"y\", style=\"sci\", scilimits=(0,0))\ngcf()\n#","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"(Image: )","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"","category":"page"},{"location":"generated/forward_model/","page":"Forward modelling with a circular surface loop","title":"Forward modelling with a circular surface loop","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#SNMRForward.jl-Documentation","page":"SNMRForward.jl Documentation","title":"SNMRForward.jl Documentation","text":"","category":"section"},{"location":"","page":"SNMRForward.jl Documentation","title":"SNMRForward.jl Documentation","text":"","category":"page"}]
}
